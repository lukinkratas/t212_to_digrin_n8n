{
  "name": "T212 to Digrin",
  "nodes": [
    {
      "parameters": {
        "content": "1. Setup in credentials as Header Auth with:\n    * name=Authorization\n    * value=T212_API_KEY\n\n2. Setup AWS credentials",
        "width": 320,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3240,
        280
      ],
      "id": "5fc2f234-1959-46a8-806e-a1af68747946",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://live.trading212.com/api/v0/history/exports",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"dataIncluded\": {\n    \"includeDividends\": true,\n    \"includeInterest\": true,\n    \"includeOrders\": true,\n    \"includeTransactions\": true\n  },\n  \"timeFrom\": \"{{ $json.fromDtFormatted }}\",\n  \"timeTo\": \"{{ $json.toDtFormatted }}\"\n}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1920,
        660
      ],
      "id": "7c468682-19ff-4c0a-ba74-6b7db0e8dff2",
      "name": "Create Report",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lCwKeXPCVd9pNbxl",
          "name": "T212"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "includeTime": false,
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3020,
        470
      ],
      "id": "5ae8a375-5417-422a-a964-b761446dd84a",
      "name": "Get Current Date"
    },
    {
      "parameters": {
        "operation": "subtractFromDate",
        "magnitude": "={{ $json.currentDate }}",
        "timeUnit": "months",
        "duration": 1,
        "outputFieldName": "previousMonthDate",
        "options": {
          "includeInputFields": false
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2800,
        470
      ],
      "id": "4c0af8d3-9982-40a0-940a-9a79457c454d",
      "name": "Get Last Month Date"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.fromDate }}",
        "format": "custom",
        "customFormat": "yyyy-MM-dd'T00:00:00Z'",
        "outputFieldName": "fromDateFormatted",
        "options": {
          "includeInputFields": false
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2360,
        460
      ],
      "id": "6577b4f8-807e-46b5-a005-fe62e1b43e78",
      "name": "Format From Date",
      "notes": "to make sure 00:00:00 time is used"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.toDate }}",
        "format": "custom",
        "customFormat": "yyyy-MM-dd'T00:00:00Z'",
        "outputFieldName": "toDateFormatted",
        "options": {
          "includeInputFields": false
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2360,
        660
      ],
      "id": "8a45f922-7b8d-43f8-a640-9f952b581fdb",
      "name": "Format To Date",
      "notes": "to make sure 00:00:00 time is used"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1700,
        660
      ],
      "id": "463f13be-a6e0-40d6-85af-09504d25d5ed",
      "name": "Wait 10s - Optimized Wait Time",
      "webhookId": "3b52d336-99e0-48a7-9d2f-05b121f2261d"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f273a6e8-6e60-4f0c-ab61-36af64752f20",
              "leftValue": "={{ $json.reportId }}",
              "rightValue": "={{ $('Create Report').item.json.body.reportId }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "969963f1-2f8c-4f9a-8ff2-cf5d03f5e50c",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Finished",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1260,
        660
      ],
      "id": "6da9e902-9105-4b57-b0a3-dfff75905197",
      "name": "Filter Created Report Id"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst tickerMap = {\n  'VWCE': 'VWCE.DE',\n  'VUAA': 'VUAA.DE',\n  'SXRV': 'SXRV.DE',\n  'ZPRV': 'ZPRV.DE',\n  'ZPRX': 'ZPRX.DE',\n  'MC': 'MC.PA',\n  'ASML': 'ASML.AS',\n  'CSPX': 'CSPX.L',\n  'EISU': 'EISU.L',\n  'IITU': 'IITU.L',\n  'IUHC': 'IUHC.L',\n  'NDIA': 'NDIA.L'\n};\n\nfor (const item of $input.all()) {\n  if (tickerMap[item.json.Ticker]) {\n    item.json.Ticker = tickerMap[item.json.Ticker];\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -380,
        660
      ],
      "id": "abc2359a-bd2c-465d-8673-de429ba20f17",
      "name": "Map Ticker"
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "t212-to-digrin-test",
        "fileName": "=t212/{{ $json.previousMonthDtFormatted }}.csv",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.awsS3",
      "typeVersion": 2,
      "position": [
        -600,
        440
      ],
      "id": "620a4d91-f064-4e15-958e-3a6a7bb0736f",
      "name": "AWS S3 upload T212 CSV",
      "credentials": {
        "aws": {
          "id": "pYkksP0iq0Ih6p0A",
          "name": "AWS"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.downloadLink }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1040,
        660
      ],
      "id": "57a06c4a-e6e2-4173-8c71-7a63e4c16f03",
      "name": "Get Encoded T212 CSV"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -160,
        660
      ],
      "id": "4ecc895c-5c60-41bd-903a-267b5c8c722e",
      "name": "Encode Digrin DataFrame"
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "t212-to-digrin-test",
        "fileName": "=digrin/{{ $json.previousMonthDtFormatted }}.csv",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.awsS3",
      "typeVersion": 2,
      "position": [
        280,
        260
      ],
      "id": "b8660589-6a21-466f-9029-ff37798ee8ea",
      "name": "AWS S3 Upload Digrin CSV",
      "credentials": {
        "aws": {
          "id": "pYkksP0iq0Ih6p0A",
          "name": "AWS"
        }
      }
    },
    {
      "parameters": {
        "operation": "roundDate",
        "date": "={{ $json.previousMonthDate }}",
        "outputFieldName": "fromDate",
        "options": {
          "includeInputFields": false
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2580,
        460
      ],
      "id": "c0f28323-56b7-43ed-b20e-2b8140f0944b",
      "name": "Get From Date"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.previousMonthDt }}",
        "format": "custom",
        "customFormat": "yyyy-MM",
        "outputFieldName": "previousMonthDtFormatted",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2360,
        260
      ],
      "id": "05f6fc5a-8e27-466e-8fe9-5d4b91cb82b5",
      "name": "Format Last Month Date"
    },
    {
      "parameters": {
        "operation": "roundDate",
        "date": "={{ $json.previousMonthDate }}",
        "mode": "roundUp",
        "outputFieldName": "toDate",
        "options": {
          "includeInputFields": false
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2580,
        660
      ],
      "id": "af793663-9066-40ec-aa68-1cfceed5393d",
      "name": "Get To Date"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -2140,
        660
      ],
      "id": "8ac57de3-f128-4da8-8a46-3d7f3500b76b",
      "name": "Merge"
    },
    {
      "parameters": {
        "options": {
          "rawData": true
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -820,
        660
      ],
      "id": "75f78fcc-d43c-4197-ba66-8b31a9d6447d",
      "name": "Decode T212 to DataFrame"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -820,
        440
      ],
      "id": "2d05a654-7a5b-42a6-95aa-f91240fb1c14",
      "name": "Merge1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        60,
        260
      ],
      "id": "5653811e-98ff-4811-aef0-08f821e8e0a9",
      "name": "Merge2"
    },
    {
      "parameters": {
        "url": "https://live.trading212.com/api/v0/history/exports",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1480,
        660
      ],
      "id": "16e46930-a6fb-4508-98f7-f4c8b7cc73bd",
      "name": "List Reports",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lCwKeXPCVd9pNbxl",
          "name": "T212"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "80249712-af1b-4018-948a-8f981b1bc84c",
              "leftValue": "={{ [\"Market buy\", \"Market sell\"] }}",
              "rightValue": "={{ $json.Action }}",
              "operator": {
                "type": "array",
                "operation": "contains",
                "rightType": "any"
              }
            },
            {
              "id": "a7e7a33b-d497-4d6c-9adf-81651e2af4b6",
              "leftValue": "={{ [\"VNTRF\", \"BRK.A\"] }}",
              "rightValue": "={{ $json.Ticker }}",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -600,
        660
      ],
      "id": "66a852b0-e2bc-4f91-abcd-d7f8b837b311",
      "name": "Filter Actions and Tickers"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1700,
        880
      ],
      "id": "3df82824-f285-4355-8236-df8eb6c2112a",
      "name": "Wait 10s and Retry",
      "webhookId": "3b52d336-99e0-48a7-9d2f-05b121f2261d"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1260,
        880
      ],
      "id": "a96c75f8-b811-4290-990c-847e9aa986a8",
      "name": "Wait 10s and Retry 2",
      "webhookId": "3b52d336-99e0-48a7-9d2f-05b121f2261d"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 3,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3240,
        470
      ],
      "id": "f6a08a6f-9c2e-4485-83f8-3decf1c6669c",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {
    "Create Report": [
      {
        "json": {
          "body": {
            "reportId": 1775466
          },
          "headers": {
            "date": "Thu, 24 Apr 2025 10:54:38 GMT",
            "content-type": "application/json",
            "content-length": "20",
            "connection": "close",
            "cf-cache-status": "DYNAMIC",
            "set-cookie": [
              "__cf_bm=nIfHONcKsznDCuEDZx_oJrbQ.JSqczNh_dDoSxGDpGs-1745492078-1.0.1.1-adau0pAYbIrHwdXaEtuARr5lWzRyGqz.HyIDz2eh8WWYGSM7iFP2Y7GS_9HGGOAQHsNkbC32LNMbcLSizY.MpCDA09u2vdLD7Ku3ncRLB.k; path=/; expires=Thu, 24-Apr-25 11:24:38 GMT; domain=.trading212.com; HttpOnly; Secure; SameSite=None",
              "_cfuvid=zRmj6ST9TcRMRgA56m2tnwgX7wxr_dxvo9V0cFM0TFc-1745492078811-0.0.1.1-604800000; path=/; domain=.trading212.com; HttpOnly; Secure; SameSite=None"
            ],
            "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
            "server": "cloudflare",
            "cf-ray": "935510541ae8b34b-PRG"
          },
          "statusCode": 200,
          "statusMessage": "OK"
        }
      }
    ]
  },
  "connections": {
    "Create Report": {
      "main": [
        [
          {
            "node": "Wait 10s - Optimized Wait Time",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 10s and Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Date": {
      "main": [
        [
          {
            "node": "Get Last Month Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last Month Date": {
      "main": [
        [
          {
            "node": "Format Last Month Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get From Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get To Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format From Date": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format To Date": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait 10s - Optimized Wait Time": {
      "main": [
        [
          {
            "node": "List Reports",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Created Report Id": {
      "main": [
        [
          {
            "node": "Get Encoded T212 CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map Ticker": {
      "main": [
        [
          {
            "node": "Encode Digrin DataFrame",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Encoded T212 CSV": {
      "main": [
        [
          {
            "node": "Decode T212 to DataFrame",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Encode Digrin DataFrame": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get From Date": {
      "main": [
        [
          {
            "node": "Format From Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Last Month Date": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get To Date": {
      "main": [
        [
          {
            "node": "Format To Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Create Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decode T212 to DataFrame": {
      "main": [
        [
          {
            "node": "Filter Actions and Tickers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "AWS S3 upload T212 CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "AWS S3 Upload Digrin CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Reports": {
      "main": [
        [
          {
            "node": "Filter Created Report Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 10s and Retry 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Actions and Tickers": {
      "main": [
        [
          {
            "node": "Map Ticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10s and Retry": {
      "main": [
        [
          {
            "node": "Create Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10s and Retry 2": {
      "main": [
        [
          {
            "node": "List Reports",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Current Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ab1b69da-1901-41c2-8724-df90117a239e",
  "meta": {
    "instanceId": "74f8a61d3acf0b63caa36e4eb4e01e742ee533544d2aa1638bc4ab1492d725c0"
  },
  "id": "UTbMIfF5jcsZS5Hb",
  "tags": []
}